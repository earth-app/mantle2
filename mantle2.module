<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\mantle2\Service\ArticlesHelper;
use Drupal\mantle2\Service\PromptsHelper;

function mantle2_help($route_name, RouteMatchInterface $route_match)
{
	switch ($route_name) {
		case 'help.page.mantle2':
			$output = '';
			$output .= '<h3>' . Drupal::translation()->translate('About') . '</h3>';
			$output .=
				'<p>' .
				Drupal::translation()->translate('The Drupal backend for The Earth App') .
				'</p>';
			return $output;

		default:
	}
}

function mantle2_mail($key, &$message, $params)
{
	$message['from'] = Drupal::config('system.site')->get('mail');

	/** @var \Drupal\mantle2\Service\HTMLFactory $parser */
	$parser = Drupal::service('mantle2.parser');

	switch ($key) {
		case 'email_verification':
			$message['subject'] = 'The Earth App - Email Verification Code';

			$markdown = "Your email verification code is: **{$params['verification_code']}**\n\n
			This code will expire in 15 minutes.\n
			If you did not request this verification, please ignore this email.";

			$message['body'] = [$parser->toHtml($markdown)];
			break;
		case 'new_login':
			$message['subject'] = 'The Earth App - New Login Notification';

			$markdown = "Your account was just used to log in from a new device or location.\n\n
			**Details:**\n
			- Time: {$params['time']}\n
			- IP: {$params['ip']} ({$params['additional_ips']})\n
			- User Agent: {$params['user_agent']}\n
			- Referrer: {$params['referer']}\n\n
			If this was you, you can safely ignore this email.\n
			If you did not log in, please reset your password immediately to secure your account.";

			$message['body'] = [$parser->toHtml($markdown)];
			break;
		case 'email_change_notification':
			$message['subject'] = 'The Earth App - Email Change Notification';

			$markdown = "Your email address was just requested to be changed.\n\n
			Old Email: **{$params['old_email']}**\n\n
			New Email: **{$params['new_email']}**\n\n
			If you did not perform this action, please contact support immediately to secure your account.";

			$message['body'] = [$parser->toHtml($markdown)];
			break;
		case 'email_change_verification':
			$message['subject'] = 'The Earth App - Email Change Verification Code';

			$markdown = "Your email change verification code is: **{$params['verification_code']}**\n\n
			This code will expire in 15 minutes.\nIf you did not request this verification, please ignore this email.";
			$message['body'] = [$parser->toHtml($markdown)];
			break;
		case 'email_change_confirmed':
			$message['subject'] = 'The Earth App - Email Change Confirmation';

			$markdown = "Your email address has been successfully changed.\n\n
			Old Email: **{$params['old_email']}**\n\n
			New Email: **{$params['new_email']}**\n\n
			If you did not perform this action, please contact support immediately to secure your account.";

			$message['body'] = [$parser->toHtml($markdown)];
			break;
		case 'password_reset':
			$message['subject'] = 'The Earth App - Password Reset';

			$markdown = "We received a request to reset your password for The Earth App.\n\n
			Click the link below to reset your password:\n
			{$params['reset_link']}\n\n
			This link will expire in 1 hour.\n\n
			If you did not request this password reset, please ignore this email and your password will remain unchanged.";

			$message['body'] = [$parser->toHtml($markdown)];
			break;
		case 'new_password':
			$message['subject'] = 'The Earth App - Password Reset';

			$markdown =
				'Your password has been successfully changed. If you did not perform this action, please reset your password immediately to secure your account.';
			$message['body'] = [$parser->toHtml($markdown)];
			break;
	}
}

function mantle2_mail_alter(&$message)
{
	$messages = [
		'mantle2_email_verification',
		'mantle2_new_login',
		'mantle2_new_password',
		'mantle2_password_reset',
		'mantle2_email_change_notification',
		'mantle2_email_change_verification',
		'mantle2_email_change_confirmed',
	];
	if (in_array($message['id'], $messages, true)) {
		$message['headers']['Content-Type'] = 'text/html; charset=UTF-8';
	}
}

function mantle2_cron()
{
	// Delete expired prompts and articles
	PromptsHelper::checkExpiredPrompts();
	ArticlesHelper::checkExpiredArticles();
	Drupal::logger('mantle2')->notice('[cron] mantle2 cron executed.');
}
