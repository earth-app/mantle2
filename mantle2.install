<?php

use Drupal\node\Entity\NodeType;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\mantle2\Controller\Schema\Mantle2Schemas;

function createField(
	string $entity,
	string $name,
	string $type,
	string $label,
	bool $required = false,
	$default_value = null,
	array $settings = [],
	array $constraints = [],
	int $cardinality = 1,
) {
	if (!FieldStorageConfig::loadByName($entity, $name)) {
		FieldStorageConfig::create([
			'field_name' => $name,
			'entity_type' => $entity,
			'type' => $type,
			'cardinality' => $cardinality,
			'settings' => $settings,
			'default_value' => $default_value !== null ? ['value' => $default_value] : null,
		])->save();
	}

	if (!FieldConfig::loadByName($entity, $entity, $name)) {
		FieldConfig::create([
			'field_name' => $name,
			'entity_type' => $entity,
			'bundle' => $entity,
			'label' => $label,
			'required' => $required,
		])->save();
	}

	if ($constraints) {
		$field = \Drupal\field\Entity\FieldConfig::load("$entity.$entity.$name");
		if ($field) {
			$field->setSetting('constraints', $constraints);
			$field->save();
		}
	}
}

function createContentType(string $name, string $label, string $description, array $fields)
{
	if (!NodeType::load($name)) {
		$type = NodeType::create([
			'type' => $name,
			'name' => $label,
			'description' => $description,
		]);
		$type->save();
	}

	foreach ($fields as $field) {
		createField(
			$type->getEntityTypeId(),
			$field['name'],
			$field['type'],
			$field['label'],
			$field['required'],
			$field['default_value'],
			$field['settings'],
			$field['constraints'],
			$field['cardinality'],
		);
	}
}

function mantle2_install()
{
	// User Fields

	/// Visibility
	createField('user', 'field_visibility', 'list_string', 'Visibility', true, [
		'allowed_values' => [
			'PUBLIC' => 'Public',
			'UNLISTED' => 'Unlisted',
			'PRIVATE' => 'Private',
		],
	]);

	/// Field Privacy
	createField(
		'user',
		'field_privacy',
		'json',
		'Field Privacy',
		true,
		json_encode([
			'name' => 'PUBLIC',
			'bio' => 'PUBLIC',
			'phone_number' => 'PRIVATE',
			'country' => 'PRIVATE',
			'email' => 'MUTUAL',
			'address' => 'PRIVATE',
			'activities' => 'PUBLIC',
			'events' => 'MUTUAL',
			'friends' => 'MUTUAL',
			'last_login' => 'CIRCLE',
			'account_type' => 'PUBLIC',
		]),
		[
			'schema' => Mantle2Schemas::userFieldPrivacyJson(),
		],
	);

	/// Phone Number
	createField(
		'user',
		'field_phone',
		'integer',
		'Phone Number',
		false,
		0,
		[
			'min' => 0,
			'max' => 9999999999,
		],
		[
			'Regex' => [
				'pattern' => '/^\+?[0-9]{7,15}$/',
				'message' => 'Enter a valid phone number.',
			],
		],
	);

	/// Country
	createField(
		'user',
		'field_country',
		'string',
		'Country',
		false,
		'US',
		[
			'max_length' => 2,
		],
		[
			'Regex' => [
				'pattern' => '[A-Z]{2}',
				'message' => 'Enter a valid country code.',
			],
		],
	);

	/// Activities
	createField('user', 'field_activities', 'json', 'Activities', false, json_encode([]), [
		'schema' => Mantle2Schemas::activitiesJson(),
	]);

	// Activities
	createContentType('activities', 'Activities', 'Activities content type', [
		[
			'name' => 'field_activity_id',
			'type' => 'integer',
			'label' => 'Activity ID',
			'required' => true,
		],
		[
			'name' => 'field_activity_name',
			'type' => 'string',
			'label' => 'Activity Name',
			'required' => true,
		],
		[
			'name' => 'field_activity_description',
			'type' => 'text',
			'label' => 'Activity Description',
			'required' => true,
		],
		[
			'name' => 'field_activity_types',
			'type' => 'list_string',
			'label' => 'Activity Types',
			'required' => true,
			'settings' => [
				'allowed_values' => Mantle2Schemas::$activityTypes,
			],
		],
	]);
}
